修改为从后往前更新
=========================================
+++++++++++++++++++++++++++++++++++++++++++++++++++++
UPDATE null_table4 SET id=(SELECT null_table3.num from null_table3 where null_table3.id=3) where id=4;
+ failed to receive response from observer. reason=Failed to receive from server. poll return POLLHUP=16 or POLLERR=str(event & select.POLLERR)#0  0x000056421235a4a2 in Value::attr_type() const ()
#1  0x0000564212351c75 in Table::update_record(std::vector<st...
failed to receive response from observer. reason=Failed to receive from server. poll return POLLHUP=16 or POLLERR=str(event & select.POLLERR)#0  0x000056421235a4a2 in Value::attr_type() const ()
#1  0x0000564212351c75 in Table::update_record(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<Value, std::allocator<Value> >, Record&) ()
#2  0x00005642123655c1 in VacuousTrx::update_record(Table*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<Value, std::allocator<Value> >, Record&) ()
#3  0x000056421238e90f in UpdatePhysicalOperator::next() ()
#4  0x00005642122ea14f in SqlResult::next_tuple(Tuple*&) ()
#5  0x0000564212378790 in PlainCommunicator::write_result_internal(SessionEvent*, bool&) ()
#6  0x0000564212376c03 in PlainCommunicator::write_result(SessionEvent*, bool&) ()
#7  0x00005642122e4384 in SessionStage::handle_request(common::StageEvent*) ()
#8  0x00005642122e3e7f in SessionStage::handle_event(common::StageEvent*) ()
#9  0x00005642124553ba in common::Threadpool::run_thread(void*) ()
#10 0x00007f33c2643b43 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442
#11 0x00007f33c26d4bb4 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:100
-- below are some requests executed before(partial) --
-- init update-select
CREATE TABLE null_table4(id int not null, num int null, name char(10) null);
INSERT INTO null_table4 VALUES (9, 9, 'N9');
INSERT INTO null_table4 VALUES (4, 4, 'N4');
INSERT INTO null_table4 VALUES (9, 9, 'N9');
UPDATE null_table4 SET num=null where id=4;
...
-- update-select
UPDATE null_table4 SET name=null where num is null;
-- update-select
UPDATE null_table4 SET id=null where num is null;
UPDATE null_table4 SET num=(SELECT null_table3.num from null_table3 where null_table3.id=5) where id=3;
+++++++++++++++++++++++++++++++++++++++++++++++++++++
UPDATE Update_select_t2 SET t_name=707,col1=453.67 WHERE id=8;
UPDATE Update_select_t2 SET t_name=(select Update_select_t1.col1 from Update_select_t1 where Update_select_t1.id=6),col1=(select min(Update_select_t1.col1) from Update_select_t1) where id=2;
SELECT * FROM Update_select_t2;
+ failed to receive response from observer. reason='utf-8' codec can't decode byte 0xc3 in position 30: invalid continuation byte
failed to receive response from observer. reason='utf-8' codec can't decode byte 0xc3 in position 30: invalid continuation byte
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE Update_select_t1(id int, t_name char(10), col1 int, col2 int);
CREATE TABLE Update_select_t2(id int, t_name char(10), col1 int, col2 int);
insert into Update_select_t1 VALUES (2, '6BW3', 4, 3);
insert into Update_select_t1 VALUES (4, 'QO19B123', 1, 4);
insert into Update_select_t1 VALUES (5, 'FQCR', 8, 5);
...
-- update a row
UPDATE Update_select_t1 SET t_name='1R4EVO6F9B', col2=7 WHERE id=2;
SELECT * FROM Update_select_t1;
UPDATE Update_select_t1 SET col1=2, col2=(select Update_select_t2.col2 from Update_select_t2 where Update_select_t2.id=1) WHERE id=8;
SELECT * FROM Update_select_t1;
-- update rows
UPDATE Update_select_t1 SET col1=5, col2=3 WHERE col2=7;
SELECT * FROM Update_select_t1;
-- update without condition
UPDATE Update_select_t2 SET t_name=(select Update_select_t1.t_name from Update_select_t1 where Update_select_t1.id=6);
SELECT * FROM Update_select_t2;
UPDATE Update_select_t2 SET col1=4,col2=4;
SELECT * FROM Update_select_t2;
-- update in vain
UPDATE Update_select_t2 SET t_name='GK0',col1=352 where col1=103;
-- aggregation
UPDATE Update_select_t2 SET col1=(select max(Update_select_t1.col2) from Update_select_t1),col2=(select max(Update_select_t1.col1) from Update_select_t1) where id=9;
SELECT * FROM Update_select_t2;
UPDATE Update_select_t2 SET col1=(select Update_select_t1.col1 from Update_select_t1 where Update_select_t1.id=2),col2=(select Update_select_t1.col2 from Update_select_t1 where Update_select_t1.id=2) where id=9;
SELECT * FROM Update_select_t2;

+++++++++++++++++++++++++++++++++++++++++++++++++++++
UPDATE Update_select_t2 SET col1=(select max(Update_select_t1.col2) from Update_select_t1),col2=(select max(Update_select_t1.col1) from Update_select_t1) where id=1;
UPDATE Update_select_t2 SET col1=(select max(Update_select_t1.col1) from Update_select_t1) where id=1;
UPDATE Update_select_t2 SET col2=(select max(Update_select_t1.col1) from Update_select_t1) where id=1;

CREATE TABLE Update_select_t1(id int, t_name char(10), col1 int, col2 int);
CREATE TABLE Update_select_t2(id int, t_name char(10), col1 int, col2 int);
insert into Update_select_t2 VALUES (1, '2', 7, 5);
insert into Update_select_t1 VALUES (8, 'KR4YK3O', 2, 2);
insert into Update_select_t1 VALUES (1, '2', 7, 5);
insert into Update_select_t1 VALUES (9, 'GC', 6, 9);


+++++++++++++++++++++++++++++++++++++++++++++++++++++
UPDATE null_table4 SET id=null where num is null;
UPDATE null_table4 SET num=(SELECT null_table3.num from null_table3 where null_table3.id=3) where id=7;
- SUCCESS
+ FAILURE
-- below are some requests executed before(partial) --
-- init update-select
CREATE TABLE null_table4(id int not null, num int null, name char(10) null);
INSERT INTO null_table4 VALUES (8, 8, 'N8');
INSERT INTO null_table4 VALUES (7, 7, 'N7');
INSERT INTO null_table4 VALUES (5, 5, 'N5');
UPDATE null_table4 SET num=null where id=8;
...
-- update-select
UPDATE null_table4 SET name=null where num is null;


++++++++++++++++++++++++++++++++++++++++++++++++++++
UPDATE Update_select_t2 SET col1=(select max(Update_select_t1.col2) from Update_select_t1),col2=(select max(Update_select_t1.col1) from Update_select_t1) where id=1;
UPDATE Update_select_t2 SET col1=(select max(Update_select_t1.col1) from Update_select_t1) where id=1;
- SUCCESS
+ SQL_SYNTAX > Failed to parse sql
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE Update_select_t1(id int, t_name char(10), col1 int, col2 int);
CREATE TABLE Update_select_t2(id int, t_name char(10), col1 int, col2 int);
insert into Update_select_t2 VALUES (1, '2', 7, 5);

insert into Update_select_t1 VALUES (8, 'KR4YK3O', 2, 2);
insert into Update_select_t1 VALUES (1, '2', 7, 5);
insert into Update_select_t1 VALUES (9, 'GC', 6, 9);
...
-- update a row
UPDATE Update_select_t1 SET t_name='AXOLVWZ', col2=5 WHERE id=3;
SELECT * FROM Update_select_t1;
UPDATE Update_select_t1 SET col1=2, col2=(select Update_select_t2.col2 from Update_select_t2 where Update_select_t2.id=1) WHERE id=8;
SELECT * FROM Update_select_t1;
-- update rows
UPDATE Update_select_t1 SET col1=5, col2=4 WHERE col2=8;
SELECT * FROM Update_select_t1;
-- update without condition
UPDATE Update_select_t2 SET t_name=(select Update_select_t1.t_name from Update_select_t1 where Update_select_t1.id=3);
SELECT * FROM Update_select_t2;
UPDATE Update_select_t2 SET col1=7,col2=3;
SELECT * FROM Update_select_t2;
-- update in vain
UPDATE Update_select_t2 SET t_name='Q',col1=171 where col1=106;
++++++++++++++++++++++++++++++++++++++++++++++++++++


create table Update_table_not_exist(t_name char(20),col1 int,id int);


UPDATE Update_table_not_exist SET t_name='CV5O1E',col1=8 WHERE id=6;
UPDATE Update_select_t1 SET t_name=(select Update_table_not_exist.t_name from Update_table_not_exist where Update_table_not_exist.id=916) WHERE id=909;
UPDATE Update_select_t1 SET t_name='A4NTKXA6',col3=1 WHERE id=6;
- FAILURE
+ SUCCESS
insert into Update_select_t1 values('ahj',1,6);


UPDATE null_table4 SET id=null where num is null;
UPDATE null_table4 SET num=(SELECT null_table3.num from null_table3 where null_table3.id=4) where id=6;
- SUCCESS
+ SQL_SYNTAX > Failed to parse sql
-- below are some requests executed before(partial) --
-- init update-select
CREATE TABLE null_table4(id int not null, num int null, name char(10) null);
CREATE TABLE null_table3(id int not null, num int null, name char(10) null);
INSERT INTO null_table4 VALUES (7, 7, 'N7');
INSERT INTO null_table4 VALUES (9, 9, 'N9');
INSERT INTO null_table4 VALUES (5, 5, 'N5');
UPDATE null_table4 SET num=null where id=9;
...
-- update-select
UPDATE null_table4 SET name=null where num is null;

UPDATE null_table4 SET num=(SELECT null_table3.num from null_table3 where null_table3.id=4) where id=7;
UPDATE null_table4 SET num=(SELECT null_table3.num from null_table3 where null_table3.id=5) where id=7;
INSERT INTO null_table3 VALUES (4, 5, 'N5');
INSERT INTO null_table3 VALUES (5, 7, 'N5');

SELECT * FROM null_table where 1 is not null;
- 1 | 1 | 19.18 | 2003-10-07
- 1 | 7 | 16.1 | 2016-11-26
- 1 | 7 | 27.96 | 2017-09-30
- 1 | 8 | 38.7 | 2000-05-25
- 3 | 1 | 27.55 | NULL
- 3 | 3 | 41.65 | 2009-10-29
- 5 | 15 | 40 | NULL
- 6 | 1 | 14.82 | NULL
- 7 | 8 | 18.53 | NULL
- 7 | 9 | 46.68 | 2001-11-24
- 9 | 6 | 31.63 | NULL
-- below are some requests executed before(partial) --
-- INITIALIZATION
CREATE TABLE null_table(id int not null, num int null, price float not null, birthday date null);
CREATE TABLE null_table2(id int not null, num int null, price float not null, birthday date null);
CREATE INDEX index_num on null_table(num);
insert into null_table VALUES (3, 3, 41.65, '2009-10-29');
insert into null_table VALUES (1, 7, 16.10, '2016-11-26');
...



SELECT * FROM null_table where 2<>null;
+ 1 | NULL | 38.36 | 2004-05-07
+ 2 | 1 | 42.71 | 2000-11-05
+ 2 | 1 | 48.81 | 2020-11-16
+ 2 | 4 | 42.8 | 2019-12-05
+ 2 | 7 | 27.08 | 2002-03-11
+ 2 | 8 | 30.27 | 2015-11-30
+ 2 | NULL | 11.23 | 2020-01-15
+ 4 | 2 | 11.55 | 2021-10-01
+ 4 | 7 | 26.93 | 2020-07-08
+ 4 | NULL | 31.36 | 2012-03-19
+ 5 | 15 | 40 | NULL
+ 6 | 5 | 30.39 | 2010-02-04
+ 6 | 5 | 41.22 | 2020-06-20
-- below are some requests executed before(partial) --
-- INITIALIZATION
CREATE TABLE null_table(id int not null, num int null, price float not null, birthday date null);
CREATE TABLE null_table2(id int not null, num int null, price float not null, birthday date null);
CREATE INDEX index_num on null_table(num);
insert into null_table VALUES (9, null, 23.07, null);
insert into null_table VALUES (2, 7, 27.08, '2002-03-11');
...



select * from big_order_by_0, big_order_by_1, big_order_by_2, big_order_by_3 order by big_order_by_2.addr, big_order_by_0.addr, big_order_by_0.id, big_order_by_1.addr, big_order_by_3.birthday, big_order_by_2.price, big_order_by_0.price, big_order_by_1.num,...
+ failed to receive response from observer. reason=Poll timeout after 10.0 second(s)
failed to receive response from observer. reason=Poll timeout after 10.0 second(s)
-- below are some requests executed before(partial) --
-- init data: create 4 tables
CREATE TABLE big_order_by_0(id int, num int, price float, addr char(10), birthday date);
CREATE TABLE big_order_by_1(id int, num int, price float, addr char(10), birthday date);
CREATE TABLE big_order_by_2(id int, num int, price float, addr char(10), birthday date);
CREATE TABLE big_order_by_3(id int, num int, price float, addr char(10), birthday date);
-- insert data: insert 19 records into 4 tables
INSERT INTO big_order_by_0 VALUES (5, 39, 43.34, 'Q7RF3', '1994-09-23');
INSERT INTO big_order_by_0 VALUES (8, 27, 46.01, 'GWL3IEKRDK', '1990-07-16');
INSERT INTO big_order_by_0 VALUES (29, 46, 72.92, 'UM2M', '2004-06-30');
INSERT INTO big_order_by_0 VALUES (14, 45, 22.70, '2', '1996-03-18');
INSERT INTO big_order_by_0 VALUES (1, 20, 58.78, 'SRW8G804B', '1992-10-01');
...


SELECT * FROM null_table where 9 is not null;
- 1 | 9 | 45.87 | 2013-11-18
- 2 | 1 | 45.94 | 2019-09-16
- 2 | 5 | 23.39 | 2000-01-20
- 2 | 5 | 41.22 | NULL
- 2 | 8 | 26.64 | 2010-10-11
- 3 | 3 | 17.16 | 2010-12-03
- 4 | 1 | 37.72 | 2009-02-11
- 5 | 15 | 40 | NULL
- 5 | 5 | 31.39 | 2009-08-22
- 5 | 6 | 17.32 | 2021-12-15
- 6 | 2 | 31.79 | 2005-11-30
- 7 | 3 | 35.38 | 2016-01-17
- 7 | NULL | 18.38 | 2012-08-10
-- below are some requests executed before(partial) --
-- INITIALIZATION
CREATE TABLE null_table(id int not null, num int null, price float not null, birthday date null);
CREATE TABLE null_table2(id int not null, num int null, price float not null, birthday date null);
CREATE INDEX index_num on null_table(num);
insert into null_table VALUES (5, 6, 17.32, '2021-12-15');
insert into null_table VALUES (1, 9, 45.87, '2013-11-18');
...




SELECT * FROM null_table where 1<>null;
SELECT * FROM null_table where id > 1;
+ 1 | 5 | 26.29 | 2020-07-26
+ 1 | 7 | 42.18 | 2014-04-11
+ 2 | 1 | 29.74 | 2003-10-01
+ 2 | 2 | 20.25 | 2006-10-29
+ 2 | 9 | 25.13 | 2008-11-08
+ 4 | 1 | 44.31 | NULL
+ 5 | 1 | 19.75 | 2017-08-06
+ 5 | 15 | 40 | NULL
+ 5 | 3 | 42.01 | 2011-11-11
+ 7 | 5 | 21.49 | 2015-07-29
+ 7 | 5 | 32.95 | 2005-12-26
+ 7 | 8 | 19.79 | NULL
+ 8 | 2 | 47.1 | 2014-01-04
-- below are some requests executed before(partial) --
-- INITIALIZATION
CREATE TABLE null_table(id int not null, num int null, price float not null, birthday date null);
CREATE TABLE null_table2(id int not null, num int null, price float not null, birthday date null);
CREATE INDEX index_num on null_table(num);
insert into null_table VALUES (4, 1, 44.31, null);
insert into null_table VALUES (2, 9, 25.13, '2008-11-08');
...

select id from t_order_by_3 order by id;
- NULL
- NULL
  3
  4
  7
  42
  44
  45
+ null
+ null
-- below are some requests executed before(partial) --
-- order by with null
create table t_order_by_3(id int null, score float);
insert into t_order_by_3 VALUES (null, 50.80);
insert into t_order_by_3 VALUES (17, 74.10);
insert into t_order_by_3 VALUES (25, 9.60);
insert into t_order_by_3 VALUES (3, 31.20);
...


SELECT * FROM null_table where 6 is not null;
- 1 | 3 | 44.24 | 2004-08-31
- 2 | 6 | 27.78 | 2012-08-08
- 2 | 8 | 12.81 | 2018-05-18
- 3 | 8 | 34.16 | 2005-12-07
- 4 | 5 | 20.11 | 2015-08-21
- 5 | 15 | 40 | NULL
- 6 | 4 | 38.41 | 2013-11-29
- 6 | 7 | 35.78 | 2010-11-20
- 7 | 3 | 32.39 | NULL
- 8 | 8 | 48.87 | 2009-11-30
- 9 | 5 | 40.57 | 2015-11-03
-- below are some requests executed before(partial) --
-- INITIALIZATION
CREATE TABLE null_table(id int not null, num int null, price float not null, birthday date null);
CREATE TABLE null_table2(id int not null, num int null, price float not null, birthday date null);
CREATE INDEX index_num on null_table(num);
insert into null_table VALUES (6, 4, 38.41, '2013-11-29');
insert into null_table VALUES (8, 8, 48.87, '2009-11-30');
...



CREATE TABLE null_table(id int not null, num int null, price float not null, birthday date null);
- SUCCESS
+ SQL_SYNTAX > Failed to parse sql
insert into null_table values(1,null,3.1,null);


select * from t_order_by_1, t_order_by_2 where t_order_by_1.id=t_order_by_2.id order by t_order_by_1.id, t_order_by_2.id desc, t_order_by_2.score asc, t_order_by_2.name;
- 2 | 2 | 1.63 | BB3S
- 2 | 2 | 2.5 | A6
- 2 | 2 | 2.78 | CV
- 2 | 2 | 4.83 | HW4
- 3 | 3 | 1.28 | TG
- 3 | 3 | 1.46 | W
- 3 | 3 | 3.66 | R90
- 3 | 3 | 4.01 | M
- 7 | 7 | 4.19 | XLA
- 7 | 7 | 4.19 | XLA
- 8 | 8 | 1.14 | CMVD
- 8 | 8 | 1.14 | CMVD
- 8 | 8 | 1.14 | CMVD
-- below are some requests executed before(partial) --
-- init data
create table t_order_by_1(id int);
create table t_order_by_2(id int, score float, name char(4));
insert into t_order_by_1 VALUES (2);
insert into t_order_by_1 VALUES (5);
insert into t_order_by_1 VALUES (3);
...



select * from t_order_by_2 order by id, score, name;
+ 6 | 3.5 | 1P
+ 8 | 3.8 | 1YS
+ 3 | 2.89 | 4
+ 6 | 4.02 | 6
+ 5 | 3.52 | 9
+ 8 | 4.13 | 96I
  1 | 1.47 | AQU
+ 3 | 2.14 | B
+ 6 | 1.05 | E
+ 6 | 4.21 | HES
+ 5 | 4.2 | HUFZ
+ 3 | 2.99 | J0
+ 4 | 2.35 | K
-- below are some requests executed before(partial) --
-- init data
create table t_order_by_1(id int);
create table t_order_by_2(id int, score float, name char(4));
insert into t_order_by_1 VALUES (1);
insert into t_order_by_1 VALUES (8);

insert into t_order_by_2 VALUES (1,1.47,'AQU');
insert into t_order_by_2 VALUES (3,2.14,'B');
insert into t_order_by_2 VALUES (6,1.05,'E');
insert into t_order_by_2 VALUES (6,4.21,'HES');
insert into t_order_by_2 VALUES (5,4.2,'HUFZ');
insert into t_order_by_2 VALUES (3,2.99,'J0');
insert into t_order_by_2 VALUES (3,2.99,'A0');
...


select * from t_order_by_1 order by id;
  1
+ 3
  1
- 1
- 1
- 2
- 3
- 3
+ 8
  4
  4
+ 2
+ 6
-- below are some requests executed before(partial) --
-- init data
create table t_order_by_1(id int);
create table t_order_by_2(id int, score float, name char(4));
insert into t_order_by_1 VALUES (1);
insert into t_order_by_1 VALUES (3);
insert into t_order_by_1 VALUES (4);
insert into t_order_by_1 VALUES (8);
insert into t_order_by_1 VALUES (5);
...

select * from t_order_by_1 order by id;
+ 9
+ 8
+ 8
+ 7
+ 7
+ 5
+ 5
+ 3
  1
  1
- 3
- 5
- 5
-- below are some requests executed before(partial) --
-- init data
create table t_order_by_1(id int);
create table t_order_by_2(id int, score float, name char(4));
insert into t_order_by_1 VALUES (5);
insert into t_order_by_1 VALUES (5);
insert into t_order_by_1 VALUES (8);
...





=========================================
INSERT INTO t1 VALUES (1,'2020-01-21');
INSERT INTO t1 VALUES (2,'2020-10-21');
INSERT INTO t1 VALUES (3,'2020-1-01');

SELECT * FROM t1 WHERE u_date='2017-2-29';

insert into t1 values(4,'2017-2-28');

===========================================================================================
update 测试用例

create table t2 (id int,score int);
insert into t2 values(1,1);
update t2 set score = 100;
update t2 set id=1;


select * t2 from t2;

update t2 set score = 100 where id = 1;


CREATE TABLE update_table_1(id int, t_name char(20), col1 int, col2 int);
CREATE INDEX index_id on update_table_1(id);
select * from update_table_1;
INSERT INTO update_table_1 VALUES (30, '66SL8MPKAFGN71C', 71, 52);
UPDATE update_table_1 SET t_name='NHL5A74RM6KGN7F02' WHERE id=45;
UPDATE update_table_1 SET t_name='NHL5A74RM6KGN7F' WHERE id=45;

UPDATE update_table_1 SET id=6 WHERE t_name='2TUR2JJ66SQT6';

CREATE TABLE update_table_1(id int, t_name char(20), col1 int, col2 int);
CREATE INDEX index_id on update_table_1(id);
INSERT INTO update_table_1 VALUES (56, '2TUR2JJ66SQT6', 75, 12);
INSERT INTO update_table_1 VALUES (37, '9N4M5MYB00U5O2O6', 86, 71);
INSERT INTO update_table_1 VALUES (42, 'Z2G0HSKMXFNP2C267', 86, 12);
...
-- update
UPDATE update_table_1 SET t_name='XPTHPGQY4TDSWO64AL7' WHERE id=37;
-- update2
UPDATE update_table_1 SET col2=31 WHERE col1=75;


===========================================================================================

Select * from join_table_1 inner join join_table_2 on join_table_1.id=join_table_2.id;
Select name, age from join_table_1 inner join join_table_2 on join_table_1.id=join_table_2.id;

Select join_table_1.name, join_table_2.age from join_table_1 inner join join_table_2 on join_table_1.id=join_table_2.id;
Select join_table_1.name, join_table_2.age from join_table_1 inner join join_table_2 on join_table_1.id=join_table_2.id;
+ 16 | QJ0BBT5RHLHO
+ 21 | 2G0VGPDJ32O13T
+ 4 | 2Q1JWI3ZBU20H2W9ZOZ4
-- below are some requests executed before(partial) --
-- init data
select * from join_table_1;

CREATE TABLE join_table_1(id int, name char(20));
CREATE TABLE join_table_2(id int, age int);
CREATE TABLE join_table_3(id int, level int);
create table join_table_empty_1(id int, num_empty_1 int);
create table join_table_empty_2(id int, num_empty_2 int);


insert into join_table_1 values(1,'s1');
insert into join_table_1 values(2,'s2');
insert into join_table_1 values(3,'s3');
insert into join_table_1 values(4,'s4');
insert into join_table_1 values(5,'s5');

insert into join_table_2 values(1,11);
insert into join_table_2 values(2,12);
insert into join_table_2 values(3,13);
insert into join_table_2 values(4,14);
insert into join_table_2 values(5,15);

insert into join_table_3 values(1,90);
insert into join_table_3 values(2,91);
insert into join_table_3 values(3,92);
...


Select * from join_table_1 inner join join_table_2 on join_table_1.id=join_table_2.id and join_table_2.age > 28;
+ failed to receive response from observer. reason=Failed to receive from server. poll return POLLHUP=16 or POLLERR=str(event & select.POLLERR), sql=Select * from join_table_1 inner join join_table_2 on join_table_1.id=join_table_2.id and join_table_2.age>28...
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE join_table_1(id int, name char(20));
CREATE TABLE join_table_2(id int, age int);
CREATE TABLE join_table_3(id int, level int);
create table join_table_empty_1(id int, num_empty_1 int);
create table join_table_empty_2(id int, num_empty_2 int);
...

Select * from join_table_4 inner join join_table_1 on join_table_1.name>join_table_4.col and join_table_1.id<join_table_4.id;
- 5 | 13.5 | 4 | 16a
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE join_table_1(id int, name char(20));
CREATE TABLE join_table_2(id int, age int);
CREATE TABLE join_table_3(id int, level int);
create table join_table_empty_1(id int, num_empty_1 int);
create table join_table_empty_2(id int, num_empty_2 int);
...
-- typecast
INSERT INTO join_table_1 VALUES (4, '16a');
Select * from join_table_1 inner join join_table_2 on join_table_1.name<join_table_2.age and join_table_1.id=join_table_2.id;
CREATE TABLE join_table_4(id int, col float);
INSERT INTO join_table_4 VALUES(1, 16.5);
INSERT INTO join_table_4 VALUES(2, 17.5);
...

Select * from join_table_1 inner join join_table_2 on join_table_1.name<join_table_2.age and join_table_1.id<join_table_2.id;


Select * from join_table_2 inner join join_table_3 on 1>1.5;
+ 16 | 11 | 16 | 11
+ 16 | 11 | 5 | 11
+ 20 | 16 | 16 | 11
+ 20 | 16 | 5 | 11
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE join_table_1(id int, name char(20));
CREATE TABLE join_table_2(id int, age int);
CREATE TABLE join_table_3(id int, level int);
create table join_table_empty_1(id int, num_empty_1 int);
create table join_table_empty_2(id int, num_empty_2 int);
...
-- typecast
INSERT INTO join_table_1 VALUES (4, '16a');
Select * from join_table_1 inner join join_table_2 on join_table_1.name<join_table_2.age and join_table_1.id=join_table_2.id;
CREATE TABLE join_table_4(id int, col float);
INSERT INTO join_table_4 VALUES(1, 16.5);
INSERT INTO join_table_4 VALUES(2, 17.5);
...


Select * from join_table_4 inner join join_table_1 on join_table_1.name>join_table_4.col and join_table_1.id<join_table_4.id;
Select * from join_table_4 inner join join_table_1 on join_table_1.name<join_table_4.col and join_table_1.id<join_table_4.id;
  5 | 13.5 | 4 | 16a
+ 5 | 13.5 | 4 | J03EI4H4M1NXALT
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE join_table_1(id int, name char(20));
CREATE TABLE join_table_2(id int, age int);
CREATE TABLE join_table_3(id int, level int);
create table join_table_empty_1(id int, num_empty_1 int);
create table join_table_empty_2(id int, num_empty_2 int);
...
-- typecast
INSERT INTO join_table_1 VALUES (4, '16a');
INSERT INTO join_table_1 VALUES (4, 'J03EI4H4M1NXALT');
Select * from join_table_1 inner join join_table_2 on join_table_1.name<join_table_2.age and join_table_1.id=join_table_2.id;
CREATE TABLE join_table_4(id int, col float);
INSERT INTO join_table_4 VALUES(1, 16.5);
INSERT INTO join_table_4 VALUES(2, 17.5);
...


CREATE TABLE multi_index(id int, col1 int, col2 float, col3 char(10), col4 date, col5 int, col6 int);
CREATE INDEX i_1_12 ON multi_index(col1,col2);
CREATE INDEX i_1_345 ON multi_index(col3, col4, col5);
+ failed to receive response from observer. reason=Failed to receive from server. poll return POLLHUP=16 or POLLERR=str(event & select.POLLERR)#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=140525020038720) at ./nptl/pthread_kill.c:44
#1  __p...
failed to receive response from observer. reason=Failed to receive from server. poll return POLLHUP=16 or POLLERR=str(event & select.POLLERR)#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=140525020038720) at ./nptl/pthread_kill.c:44
#1  __pthread_kill_internal (signo=6, threadid=140525020038720) at ./nptl/pthread_kill.c:78
#2  __GI___pthread_kill (threadid=140525020038720, signo=signo@entry=6) at ./nptl/pthread_kill.c:89
#3  0x00007fce8a33b476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26
#4  0x00007fce8a3217f3 in __GI_abort () at ./stdlib/abort.c:79
#5  0x00007fce8a6cab9e in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6
#6  0x00007fce8a6d620c in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6
#7  0x00007fce8a6d6277 in std::terminate() () from /lib/x86_64-linux-gnu/libstdc++.so.6
#8  0x00007fce8a6d64d8 in __cxa_throw () from /lib/x86_64-linux-gnu/libstdc++.so.6
#9  0x00007fce8a6ca7ac in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6
#10 0x00005594dab6966c in __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned long, void const*) ()
#11 0x00005594dab691bc in std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned long) ()
#12 0x00005594dab68d66 in std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned long) ()
#13 0x00005594dab8c26f in void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) ()
#14 0x00005594dab8b572 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) ()


Select * from join_table_1 inner join join_table_2 on join_table_1.id=join_table_2.id and join_table_2.age>15 inner join join_table_3 on join_table_1.id=join_table_2.id and join_table_3.level>=23;
- 16 | 5FE80SDIRQ | 16 | 17 | 23 | 23
+ 16 | 5FE80SDIRQ | 23 | 23 | 16 | 17
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE join_table_1(id int, name char(20));
CREATE TABLE join_table_2(id int, age int);
CREATE TABLE join_table_3(id int, level int);
create table join_table_empty_1(id int, num_empty_1 int);
create table join_table_empty_2(id int, num_empty_2 int);
...

DELETE FROM multi_index3 WHERE id = 9 and col1 = 1;

DELETE FROM multi_index3 WHERE id = 7 and col1 = 2;
DELETE FROM multi_index3 WHERE id = 1 and col1 = 1;
DELETE FROM multi_index3 WHERE id = 3 and col1 = 2;
...
SELECT * FROM multi_index3;
+ 1 | 1 | 46.23 | JWFQ7LZEZR | 2006-12-18 | 4 | 73
  1 | 2 | 10.03 | T4C | 2003-05-14 | 8 | 99
  1 | 2 | 17.94 | QJ | 2014-07-18 | 3 | 33
  1 | 2 | 45.74 | VNXRHI | 2019-05-04 | 7 | 71
  2 | 1 | 42.64 | D8HOW | 2007-12-03 | 7 | 60
  2 | 1 | 47.49 | W7IJ3V | 2019-01-31 | 8 | 30
+ 5 | 1 | 38.93 | HGIKL7 | 2005-11-23 | 2 | 68
+ 5 | 1 | 41.35 | 0JKA | 2000-03-13 | 3 | 82
  6 | 2 | 21.3 | V | 2010-03-12 | 7 | 19
  6 | 2 | 21.85 | YE69N1U3 | 2017-10-19 | 4 | 49
  6 | 2 | 23.38 | RJGNRC7MWM | 2021-07-11 | 2 | 25
  7 | 1 | 39.3 | GCZ | 2000-10-06 | 8 | 51
  7 | 1 | 40.2 | OR | 2004-03-11 | 4 | 80
-- below are some requests executed before(partial) --
-- influence of inserting
CREATE TABLE multi_index3(id int, col1 int, col2 float, col3 char(10), col4 date, col5 int, col6 int);
CREATE INDEX i_3_i1 ON multi_index3(id,col1);
insert into multi_index3 VALUES (7, 2, 49.38, 'TZSPT6FUL', '2002-01-31', 8, 59);
insert into multi_index3 VALUES (1, 2, 17.94, 'QJ', '2014-07-18', 3, 33);
insert into multi_index3 VALUES (1, 1, 32.15, '0B4', '2009-01-24', 2, 75);
...
-- influence of inserting2
CREATE INDEX i_3_14 ON multi_index3(col1,col4);
insert into multi_index3 VALUES (4, 1, 21.79, 'X9GB6RR9', '2018-05-19', 4, 24);
insert into multi_index3 VALUES (4, 2, 35.80, 'LAM5H', '2003-07-07', 6, 17);
insert into multi_index3 VALUES (1, 1, 46.23, 'JWFQ7LZEZR', '2006-12-18', 4, 73);
insert into multi_index3 VALUES (5, 1, 38.93, 'HGIKL7', '2005-11-23', 2, 68);
...
-- influence of deleting
DELETE FROM multi_index3 WHERE id = 4;
DELETE FROM multi_index3 WHERE id = 3;
-- influence of deleting
DELETE FROM multi_index3 WHERE col3 = 'O2IKS4N0';

UPDATE unique_table2 SET id1=1,id2=4 where id2=2;
UPDATE unique_tableq SET id=2 where col1=1;
SELECT * FROM unique_table2;
  1 | 1 | 1 | 1
- 1 | 4 | 1 | 1
- 2 | 3 | 1 | 1
+ 1 | 2 | 1 | 1
+ 1 | 3 | 1 | 1
-- below are some requests executed before(partial) --
-- init
CREATE TABLE unique_table1(id int, col1 int, col2 int);
CREATE TABLE unique_table2(id1 int, id2 int, col1 int, col2 int);
INSERT INTO unique_table1 VALUES (1,1,1);
INSERT INTO unique_table2 VALUES (1,1,1,1);
-- unique test
CREATE UNIQUE INDEX index_id on unique_table1(id);
INSERT INTO unique_table1 VALUES (2,1,1);

INSERT INTO unique_table1 VALUES (3,2,1);
INSERT INTO unique_table1 VALUES (1,2,1);
...

UPDATE unique_table2 SET id1=1,id2=4 where id2=2;
SELECT * FROM unique_table2;
  1 | 1 | 1 | 1
- 1 | 4 | 1 | 1
- 2 | 3 | 1 | 1
+ 1 | 2 | 1 | 1
+ 1 | 3 | 1 | 1
-- below are some requests executed before(partial) --
-- init
CREATE TABLE unique_table1(id int, col1 int, col2 int);
CREATE TABLE unique_table2(id1 int, id2 int, col1 int, col2 int);
INSERT INTO unique_table1 VALUES (1,1,1);
INSERT INTO unique_table2 VALUES (1,1,1,1);
-- unique test
CREATE UNIQUE INDEX index_id on unique_table1(id);
INSERT INTO unique_table1 VALUES (2,1,1);
CREATE UNIQUE INDEX index_id on unique_table1(id);

CREATE UNIQUE INDEX index_id on unique_table2(id);
INSERT INTO unique_table1 VALUES (3,2,1);
INSERT INTO unique_table1 VALUES (1,2,1);

INSERT INTO unique_table2 VALUES (1,2,1,1);
INSERT INTO unique_table2 VALUES (1,3,1,1);
...

CREATE TABLE unique_table2(id1 int, id2 int, col1 int, col2 int);
CREATE UNIQUE INDEX index_id on unique_table2(id1,id2);
INSERT INTO unique_table2 VALUES (1,2,1,1);
INSERT INTO unique_table2 VALUES (1,3,1,1);
UPDATE unique_table2 SET id1=3,id2=4 where id2=2;
select * from unique_table2;


SELECT * FROM like_table WHERE name LIKE 'f%';
SELECT * FROM like_table WHERE name NOT LIKE 'f%';
- 13 | coconut
- 8 | coconut
- 9 | cherry
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE like_table(id int, name char(30));
insert into like_table VALUES (0, 'apple');
insert into like_table VALUES (1, 'fig');
insert into like_table VALUES (2, 'grape');
insert into like_table VALUES (3, 'strawberry');
...

SELECT count(*) FROM aggregation_func;
- 70
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE aggregation_func(id int, num int, price float, addr char(4), birthday date);
-- insert data:70
INSERT INTO aggregation_func VALUES (70, 1, 11.0, '5M9', '2019-02-09');
INSERT INTO aggregation_func VALUES (40, 1, 11.0, 'H', '2011-10-26');
INSERT INTO aggregation_func VALUES (70, 1, 11.0, 'VGNE', '2023-06-08');
INSERT INTO aggregation_func VALUES (50, 1, 16.0, 'L', '2036-06-13');
INSERT INTO aggregation_func VALUES (50, 1, 1.0, '3G', '2023-04-25');
...


SELECT count(*) FROM aggregation_func;
SELECT count(id) FROM aggregation_func;
- 70
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE aggregation_func(id int, num int, price float, addr char(4), birthday date);
-- insert data:70
INSERT INTO aggregation_func VALUES (70, 1, 11.0, '5M9', '2019-02-09');
INSERT INTO aggregation_func VALUES (40, 1, 11.0, 'H', '2011-10-26');
INSERT INTO aggregation_func VALUES (70, 1, 11.0, 'VGNE', '2023-06-08');
INSERT INTO aggregation_func VALUES (50, 1, 16.0, 'L', '2036-06-13');
INSERT INTO aggregation_func VALUES (50, 1, 1.0, '3G', '2023-04-25');

SELECT avg(id) FROM aggregation_func;
SELECT sum(id) FROM aggregation_func;
SELECT max(id) FROM aggregation_func;
SELECT min(id) FROM aggregation_func;

...

SELECT count(*) FROM aggregation_func;
SELECT count(id2) FROM aggregation_func;
SELECT count(id3) FROM aggregation_func;
- 80
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE aggregation_func(id int, num int, price float, addr char(4), birthday date);
-- insert data:80
INSERT INTO aggregation_func VALUES (10, 1, 11.0, 'U72G', '2035-11-09');
INSERT INTO aggregation_func VALUES (60, 1, 11.0, '6', '2011-01-31');
INSERT INTO aggregation_func VALUES (40, 1, 6.0, '4', '1996-11-09');
INSERT INTO aggregation_func VALUES (70, 1, 11.0, 'PY', '2010-11-29');
INSERT INTO aggregation_func VALUES (50, 1, 11.0, 'LAY', '2002-04-17');
...

SELECT count(*) FROM aggregation_func;
SELECT count(birthday) FROM aggregation_func;
- 50
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE aggregation_func(id int, num int, price float, addr char(4), birthday date);
-- insert data:50
INSERT INTO aggregation_func VALUES (20, 1, 1.0, 'O', '2021-04-19');
INSERT INTO aggregation_func VALUES (80, 1, 11.0, '75', '2025-04-03');
INSERT INTO aggregation_func VALUES (60, 1, 11.0, '3', '1991-03-02');
INSERT INTO aggregation_func VALUES (70, 1, 6.0, 'I6W', '2011-11-21');
INSERT INTO aggregation_func VALUES (90, 1, 6.0, 'ZE', '2000-09-19');
...

SELECT min(birthday) FROM aggregation_func;
SELECT max(birthday) FROM aggregation_func;
- 1990-04-16
+ 2015-07-04
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE aggregation_func(id int, num int, price float, addr char(4), birthday date);
-- insert data:90
INSERT INTO aggregation_func VALUES (10, 1, 11.0, '6', '2000-06-05');
INSERT INTO aggregation_func VALUES (30, 1, 11.0, '1L', '2018-02-06');
INSERT INTO aggregation_func VALUES (30, 1, 6.0, 'Y6', '2005-03-28');
INSERT INTO aggregation_func VALUES (70, 1, 16.0, 'T', '2014-07-13');
INSERT INTO aggregation_func VALUES (10, 1, 6.0, '0', '2017-06-13');
...

SELECT id,avg(num),addr FROM aggregation_func;
SELECT avg(num),addr FROM aggregation_func;
- FAILURE
-- below are some requests executed before(partial) --
-- init data
CREATE TABLE aggregation_func(id int, num int, price float, addr char(4), birthday date);
-- insert data:60
INSERT INTO aggregation_func VALUES (10, 1, 1.0, 'E62', '2002-12-24');
INSERT INTO aggregation_func VALUES (80, 1, 6.0, 'FR', '2015-06-25');
INSERT INTO aggregation_func VALUES (50, 1, 6.0, 'OYJY', '1996-05-05');
INSERT INTO aggregation_func VALUES (30, 1, 11.0, '3SLF', '2009-02-11');
INSERT INTO aggregation_func VALUES (70, 1, 11.0, 'J7', '2021-08-23');
...

select * from join_table_1,join_table_2 where join_table_1.id=join_table_2.id;